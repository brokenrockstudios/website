"use strict";(self.webpackChunk_brokenrockstudios_website=self.webpackChunk_brokenrockstudios_website||[]).push([[1335],{6367:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var t=i(5893),s=i(1151);const r={sidebar_position:1},o="Rock Gameplay Events",l={id:"plugins/rockgameplayevents/index",title:"Rock Gameplay Events",description:"Brief overview of the plugin's purpose",source:"@site/products/plugins/rockgameplayevents/index.mdx",sourceDirName:"plugins/rockgameplayevents",slug:"/plugins/rockgameplayevents/",permalink:"/products/plugins/rockgameplayevents/",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"productSidebar",previous:{title:"Plugins",permalink:"/products/category/plugins"},next:{title:"Getting Started",permalink:"/products/plugins/rockgameplayevents/GettingStarted/getting-started"}},a={},c=[{value:"Brief overview of the plugin&#39;s purpose",id:"brief-overview-of-the-plugins-purpose",level:2},{value:"Purpose",id:"purpose",level:2},{value:"Key Features:",id:"key-features",level:2},{value:"Inspired Design",id:"inspired-design",level:2},{value:"Support",id:"support",level:2}];function d(e){const n={h1:"h1",h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"rock-gameplay-events",children:"Rock Gameplay Events"}),"\n",(0,t.jsx)(n.h1,{id:"introduction",children:"Introduction"}),"\n",(0,t.jsx)(n.h2,{id:"brief-overview-of-the-plugins-purpose",children:"Brief overview of the plugin's purpose"}),"\n",(0,t.jsx)(n.p,{children:"Rock Gameplay Events is a powerful Unreal Engine plugin that streamlines level design by enabling direct event binding within the editor. This intuitive system allows developers to create interactive gameplay elements without writing custom code for each interaction or being limited with specific interfaces."}),"\n",(0,t.jsx)(n.h2,{id:"purpose",children:"Purpose"}),"\n",(0,t.jsx)(n.p,{children:"Game development often requires connecting various objects and systems: buttons that open doors, pressure plates that trigger traps, light switches for a room full of lights."}),"\n",(0,t.jsx)(n.p,{children:"Traditionally, this requires one of several different common solutions:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Writing custom blueprint logic for each interaction.","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"e.g. A lightswitch might contain an array of 'BaseLight' classes."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Creating reusable interfaces that can be sometimes limiting.","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"e.g. A light switch might contain an array of Interactable classes.  But now the interface needs to be far more generalized, and might be harder to achieve specific scenarios without un-generalizing the interactable interface."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Using Level Blueprints.","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Has a whole assortment of pitfalls and issues with scalability and flexibility."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Rock Gameplay EVents eliminates these pain points by providing a straight forward and visual approach to connecting gameplay elements directly in the level editor."}),"\n",(0,t.jsx)(n.h2,{id:"key-features",children:"Key Features:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Editor-Based Event Binding"}),": Connect objects and events with simple visual references."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Universal Compatibility"}),": works with all existing multicast delegates and blueprint callable functions."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Helper Gameplay Node Actors"}),": Increase flexibility of 1-off actions by providing some common functionality that works with both UE in general, but further enhances this tool."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Zero Code Changes required"}),": Integrates directly with your existing delegates and functions. Unlike many other systems that require code changes, or adherence to base actors or interfaces. You can start using this plugin immediatelly"]}),"\n",(0,t.jsx)(n.li,{children:"Visual Debugging: Color-coded debug lines display incoming and outgoing connections. Easily and visually see interconnected actors."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"inspired-design",children:"Inspired Design"}),"\n",(0,t.jsx)(n.p,{children:"Rock Gameplay Events draws inspiration from intuitive event systems in tools like UEFN (Unreal Editor for Fortnite), Valve's Source Engine, and many other game engines. It brings a streamlined approach making otherwise complex interactions interactions more accessible to developers of all skill levels."}),"\n",(0,t.jsx)(n.p,{children:"Simplicity without sacrifice."}),"\n",(0,t.jsx)(n.h2,{id:"support",children:"Support"}),"\n",(0,t.jsx)(n.p,{children:"The github issues is the best place to file issues or via FAB's listed contact email for more personalized support."})]})}function p(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},1151:(e,n,i)=>{i.d(n,{Z:()=>l,a:()=>o});var t=i(7294);const s={},r=t.createContext(s);function o(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);