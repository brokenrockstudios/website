"use strict";(self.webpackChunk_brokenrockstudios_website=self.webpackChunk_brokenrockstudios_website||[]).push([[5155],{1491:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var o=t(5893),s=t(1151);const a={slug:"core-concepts",title:"Concepts and Usage",authors:["namrog84"],sidebar_position:3,tags:["tutorial","introduction","rock gameplay events","binding","editor"]},r="Core Concepts and Usage",i={id:"plugins/rockgameplayevents/ConceptsUsage/index",title:"Concepts and Usage",description:"How event system works",source:"@site/products/plugins/rockgameplayevents/ConceptsUsage/index.mdx",sourceDirName:"plugins/rockgameplayevents/ConceptsUsage",slug:"/plugins/rockgameplayevents/ConceptsUsage/core-concepts",permalink:"/products/plugins/rockgameplayevents/ConceptsUsage/core-concepts",draft:!1,unlisted:!1,tags:[{label:"tutorial",permalink:"/products/tags/tutorial"},{label:"introduction",permalink:"/products/tags/introduction"},{label:"rock gameplay events",permalink:"/products/tags/rock-gameplay-events"},{label:"binding",permalink:"/products/tags/binding"},{label:"editor",permalink:"/products/tags/editor"}],version:"current",sidebarPosition:3,frontMatter:{slug:"core-concepts",title:"Concepts and Usage",authors:["namrog84"],sidebar_position:3,tags:["tutorial","introduction","rock gameplay events","binding","editor"]},sidebar:"productSidebar",previous:{title:"Getting Started",permalink:"/products/plugins/rockgameplayevents/GettingStarted/getting-started"},next:{title:"Concepts and Usage",permalink:"/products/plugins/rockgameplayevents/Example/demo-project"}},c={},l=[{value:"How event system works",id:"how-event-system-works",level:2},{value:"RockDelegateConnectorComponent",id:"rockdelegateconnectorcomponent",level:3},{value:"RockGameplayEventWorldSubsystem",id:"rockgameplayeventworldsubsystem",level:3},{value:"Usage",id:"usage",level:2},{value:"Example Project",id:"example-project",level:3},{value:"Incoming Connections",id:"incoming-connections",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",...(0,s.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"core-concepts-and-usage",children:"Core Concepts and Usage"}),"\n",(0,o.jsx)(n.h2,{id:"how-event-system-works",children:"How event system works"}),"\n",(0,o.jsx)(n.h3,{id:"rockdelegateconnectorcomponent",children:"RockDelegateConnectorComponent"}),"\n",(0,o.jsx)(n.p,{children:"This is what you will use to set up connections between actors."}),"\n",(0,o.jsx)(n.p,{children:"This is mostly just a helper component, there should only ever be 1 per actor.\r\nThis component manages the input/output connections between actors."}),"\n",(0,o.jsx)(n.p,{children:"See #Usage below for how to use."}),"\n",(0,o.jsx)(n.h3,{id:"rockgameplayeventworldsubsystem",children:"RockGameplayEventWorldSubsystem"}),"\n",(0,o.jsx)(n.p,{children:"The core of the system will bind the the appropriate functions and delegates 1 frame after BeginPlay. This subsystem is responsible for triggering these binds and then destroying the components."}),"\n",(0,o.jsx)(n.p,{children:"The destruction of components is purely a memory optimization as we no longer have a need for the actor components after binding."}),"\n",(0,o.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,o.jsx)(n.p,{children:"The core of the plugin utilizes RockDelegateConnector Component."}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"Attach it to any actor either instanced or as part of the base class."}),"\n",(0,o.jsx)(n.li,{children:"In a placed instance actor with the component:"}),"\n",(0,o.jsx)(n.li,{children:"Add a new DelegateConnections array element using the +"}),"\n",(0,o.jsxs)(n.li,{children:["Select any delegate on the parent actor. (e.g. ",(0,o.jsx)(n.code,{children:"OnButtonEnabled"})," from the example project)"]}),"\n",(0,o.jsx)(n.li,{children:"Add a new array element to this element"}),"\n",(0,o.jsx)(n.li,{children:"Select any placed target actor (e.g. BP_Fan)"}),"\n",(0,o.jsx)(n.li,{children:"Select a corresponding blueprint callable function on target actor."}),"\n"]}),"\n",(0,o.jsx)(n.admonition,{title:"Tip",type:"info",children:(0,o.jsx)(n.p,{children:"The available list of functions will be filtered to only corresponding delegate.\r\ne.g. A delegate with 1 parameter (AActor*) can only be bound to functions that have a matching signature (i.e. also has 1 parameter of AActor*)"})}),"\n",(0,o.jsx)(n.p,{children:"An advanced setting is that AutoDestroyAfterBind:\r\nThere is no current functionality for the component to exist after beginplay.\r\nSo by default it destroys itself at this time."}),"\n",(0,o.jsx)(n.h3,{id:"example-project",children:"Example Project"}),"\n",(0,o.jsx)(n.p,{children:"Check out the example project for already set up system"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://github.com/brokenrockstudios/RockGameplayEventsExample",children:"https://github.com/brokenrockstudios/RockGameplayEventsExample"})}),"\n",(0,o.jsx)(n.h3,{id:"incoming-connections",children:"Incoming Connections"}),"\n",(0,o.jsx)(n.p,{children:"Incoming Connections is updated automatically and only used for visual debug lines.\r\nNo changes can be made by the user."})]})}function p(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>i,a:()=>r});var o=t(7294);const s={},a=o.createContext(s);function r(e){const n=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),o.createElement(a.Provider,{value:n},e.children)}}}]);